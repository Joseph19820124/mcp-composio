version: '3.8'

services:
  # Composio MCP 服务器
  mcp-composio:
    image: node:18-alpine
    container_name: mcp-composio-server
    working_dir: /app
    command: >
      sh -c "
        npm install -g @composio/mcp@latest &&
        composio-mcp server --port 3000
      "
    ports:
      - "3000:3000"
    environment:
      - COMPOSIO_API_KEY=${COMPOSIO_API_KEY}
      - NODE_ENV=production
      - MCP_LOG_LEVEL=info
    volumes:
      - mcp-data:/app/data
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Redis 缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcp-network
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mcp-composio
    restart: unless-stopped
    networks:
      - mcp-network
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"

  # 监控服务（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - mcp-network

  # Grafana 仪表板（可选）
  grafana:
    image: grafana/grafana:latest
    container_name: mcp-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - mcp-network

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mcp-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
